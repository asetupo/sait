    from flask import Flask, render_template, request, redirect, url_for, session
import random
import string
import os

app = Flask(__name__)
app.secret_key = 'your_secret_key'  # Задайте свой секретный ключ

USERS_FILE = 'users.txt'

def load_users():
    users = {}
    if os.path.exists(USERS_FILE):
        with open(USERS_FILE, 'r') as f:
            for line in f:
                username, password = line.strip().split(':', 1)
                users[username] = password
    return users

def save_user(username, password):
    with open(USERS_FILE, 'a') as f:
        f.write(f'{username}:{password}\n')

def generate_password(length):
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(random.choice(characters) for _ in range(length))
    return password

@app.route('/')
def home():
    if 'username' in session:
        return redirect(url_for('generator'))
    return redirect(url_for('login'))

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form.get('username', '').strip()
        password = request.form.get('password', '').strip()
        users = load_users()
        if username in users:
            error = 'Пользователь уже существует.'
            return render_template('register.html', error=error)
        else:
            save_user(username, password)
            return redirect(url_for('login'))
    return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form.get('username', '').strip()
        password = request.form.get('password', '').strip()
        users = load_users()
        if username in users and users[username] == password:
            session['username'] = username
            return redirect(url_for('generator'))
        else:
            error = 'Неверное имя или пароль.'
            return render_template('login.html', error=error)
    return render_template('login.html')

@app.route('/logout')
def logout():
    session.pop('username', None)
    return redirect(url_for('login'))

@app.route('/generator', methods=['GET', 'POST'])
def generator():
    if 'username' not in session:
        return redirect(url_for('login'))

    passwords = []
    if request.method == 'POST':
        try:
            length = int(request.form.get('length', 12))
            count = int(request.form.get('count', 1))
            if count < 1:
                count = 1
            for _ in range(count):
                passwords.append(generate_password(length))
        except ValueError:
            passwords = ['Ошибка: введите корректные числа']
    return render_template('index.html', passwords=passwords)

if __name__ == '__main__':
